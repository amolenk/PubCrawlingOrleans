@page "/venues/{VenueId}"
@inject PubCrawlService PubCrawlService

<div class="container">
    <h1>@_venueName</h1>

    <ul class="beer-list">
        @foreach (var beer in _beers)
        {
            <li class="beer-item">
                <div class="beer-name">@beer.Name</div>
                <div class="beer-rating">@(_ratings.ContainsKey(beer.Id) ? _ratings[beer.Id] : 0)</div>
                <div>
                    <button class="btn" @onclick="LikeAsync">👍</button>
                    <button class="btn" @onclick="DislikeAsync">👎</button>
                </div>
            </li>
        }
    </ul>
</div>

@code {
    private string _venueName = string.Empty;
    private List<Beer> _beers = new();
    private Dictionary<string, int> _ratings = new();

    [Parameter]
    public string VenueId { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        var venue = await PubCrawlService.GetVenueAsync(VenueId);

        var beers = (await PubCrawlService.GetBeerSelectionAsync())
            .ToDictionary(b => b.Id);

        _ratings = await PubCrawlService.GetBeerRatingsAsync();

        _venueName = venue.Name;
        _beers = venue.Beers.Select(b => beers[b]).ToList();
    } 

    public Task LikeAsync()
    {
        return Task.CompletedTask;
    }

    public Task DislikeAsync()
    {
        return Task.CompletedTask;
    }
}
